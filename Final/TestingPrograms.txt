Code for testing:
 1)multiply code(r2*r3)

lw r1 7(r0)
loop: add r1 r1 r3
addi r2 r2 -1
bge r2 r0 loop

2)xor of two register values and storing the result as well as loading it in r10

xor r1 r1 r2
sw r1 2(r3)
lw r10 3(r6)

3) jump function testing

addition: addi r2 r1 8
jalr r0 r31 0
addi r1 r0 12
jal addition
add r1 r2 r2

4) addition of number from 1 to n(number is stored through addi r2 r0 number command)
summation: add r1 r1 r2
sub r2 r2 r3
bge r2 r0 summation
jalr r0 r31 0
addi r3 r0 1 
addi r1 r0 0
addi r2 r0 10
jal summation
addi r1 r1 0

5)
addi r15 r16 100
addi r1 r2 5
addi r3 r4 4
sw r3 0(r15)
addi r5 r3 1
beq r5 r1 branch_1
add r1 r2 r3
sub r1 r2 r3
branch_1: sub r6 r5 r3
addi r8 r9 2
sra r9 r3 r8
sll r10 r5 r6
lw r11 100(r12)
bne r10 r11 branch_2
branch_2: blt r9 r10 branch_3
branch_3: bge r5 r8 branch_4
branch_4: jal r12 1
lui r13 10
and r14 r10 r11
or r16 r15 r11
xor r17 r16 r15
jalr r18 r1 25

6)program to check if number stored in r1 is prime or not

addi r1 r1 121
sw r1 17(r0)
addi r2 r2 2
loop: lw r3 17(r0)
jal mod
beq r3 r0 notprime
addi r2 r2 1
blt r2 r1 loop
addi r0 r0 1
beq r10 r10 exit
mod: sub r3 r3 r2
bge r3 r2 mod
jalr r5 r31 0
notprime: addi r0 r0 0
exit: addi r5 r5 5